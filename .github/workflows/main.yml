name: Main CI/CD Workflow

on:
  push:
    branches:
      - master
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'statistics/**'
  workflow_dispatch:

jobs:
  prepare-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Setup job for each server
        run: |
          SERVERS_IPS="${{ secrets.SERVERS_IPS }}"
          IFS=',' read -ra ADDR <<< "$SERVERS_IPS"
          echo "${{ secrets.SERVER_PASSWORD }}" > sshpass.txt
          for SERVER_IP in "${ADDR[@]}"; do
            echo "server_ip=$SERVER_IP" >> $GITHUB_ENV
            echo "Attempting to connect to $SERVER_IP with user ${{ secrets.SERVER_USER }}"
            
            # Using sshpass with a password file
            IS_NEW=$(sshpass -f sshpass.txt ssh -vvv -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@$SERVER_IP "test -e ~/is_configured && echo 'no' || echo 'yes'")
            echo "SSH command completed with status $?"
            if [ "$IS_NEW" = "yes" ]; then
              echo "Server $SERVER_IP is new. Triggering new server deployment."
              echo "new_server=true" >> $GITHUB_ENV
            fi
          done
          rm -f sshpass.txt # Clean up
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}

      - name: Check New Server Status
        run: |
          if [ "${{ env.new_server }}" = "true" ]; then
            echo "A new server deployment is triggered for IP: ${{ env.server_ip }}"
          fi

      - name: Dispatch Deployment Workflows
        if: env.new_server == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy New Server
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: master
          inputs: '{"server_ip": "${{ env.server_ip }}"}'

      - name: Check Paths and Deploy
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -q 'backend/'; then
            echo "Changes detected in backend. Dispatching backend deployment."
            echo "deploy_backend=true" >> $GITHUB_ENV
          fi
          if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -q 'frontend/'; then
            echo "Changes detected in frontend. Dispatching frontend deployment."
            echo "deploy_frontend=true" >> $GITHUB_ENV
          fi
          if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -q 'statistics/'; then
            echo "Changes detected in statistics. Dispatching statistics deployment."
            echo "deploy_statistics=true" >> $GITHUB_ENV

      - name: Trigger Backend Deployment
        if: env.deploy_backend == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy Backend
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: master

      - name: Trigger Frontend Deployment
        if: env.deploy_frontend == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy Frontend
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: master

      - name: Trigger Statistics Deployment
        if: env.deploy_statistics == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy Statistics
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: master
